name: Java CI with Maven

on:
  push:
    # 分支
    branches: [ master ]
    tags:        
      - v2
      - v1.*
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-latest
    name: Running Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: 缓存 Maven 依赖
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: 编译代码
        run: mvn compile
      - name: Deploy the JAR file to the remote server
        uses: actions/checkout@v2
      - name: 设置JDK版本为1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: 用Maven打成Jar包
        run: mvn -B package --file pom.xml -Dmaven.test.skip=true
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: demoAction.jar
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: dnslin/demoAction
      - name: 设置Docker USER 和 TOKEN
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: 设置Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: 构建以及推送镜像
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          platforms: |
            linux/amd64
            linux/arm64/v8
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/demoaction:latest
      - name: ssh连接服务器执行脚本
#        if: always()
        uses: fifsky/ssh-action@master
        with:
          command: | # 命令中的 & 表示在后台运行进程
            sh start.sh
          host: ${{ secrets.HOST }}
          user: root
          key: ${{ secrets.PRIVATE_KEY}}
          args: "-tt -vvv"
#      - name: 将 JAR 包部署到服务器
#        uses: garygrossgarten/github-action-scp@release
#        with:
#          local: target/demoAction.jar
#          remote: /root/demoAction.jar
#          host: ${{ secrets.HOST }}
#          username: root
#          privateKey : ${{ secrets.PRIVATE_KEY }}
#      - name: 在服务器上执行 java -jar，请确保服务器安装了 JDK
#        if: always()
#        uses: fifsky/ssh-action@master
#        with:
#          command: | # 命令中的 & 表示在后台运行进程
#            cd /root && java -jar demoAction.jar &
#          host: ${{ secrets.HOST }}
#          user: root
#          key: ${{ secrets.PRIVATE_KEY}}
#          args: "-tt"
